import styled from "styled-components";
import ArticleAction from "../Action/ArticleAction";
import ArticleViewer from "../Viewer";
import Comment from "@/stories/Comment/Comment";

const ArticleWrapper = styled.div`
  display: flex;
  flex-direction: column;
  position: relative;
`;

export default function ArticleContainer() {
  return (
    <ArticleWrapper>
      <ArticleViewer
        style={{ marginBottom: "20px" }}
        config={{
          title: "FKWICK",
          content:
            "# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。# Promise A+ 规范\n\n所有的 `Promise` 的实现都需要遵循 `Promise A+` 规范。要读懂这个规范的话, 可以顺便看下官方给的单元测试, 里面说明了每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。每个规则的情况。它是一个规范, 这就意味着它不是 `js` 独有的概念了, 我还在 `nvim` 中安装 `lsp` 插件的时候看见, 它的作者在 `lua` 里去实现了 `promise`, 当时因为云服务器没得翻墙, 所以我去改了插件源码中映射的 `lsp` 的下载地址。当然 `A+` 规范里也说了在别的语言中也存在 `promise`。",
        }}
      ></ArticleViewer>
      <Comment></Comment>
    </ArticleWrapper>
  );
}
